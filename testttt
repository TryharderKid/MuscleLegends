local crystalChances = game:GetService("ReplicatedStorage").crystalChances

local function exploreInstance(instance, depth)
    depth = depth or 0
    local indent = string.rep("  ", depth)
    
    print(indent .. instance.Name .. " (" .. instance.ClassName .. ")")
    
    if instance:IsA("ModuleScript") then
        local success, result = pcall(function()
            return require(instance)
        end)
        
        if success then
            print(indent .. "  Module content type: " .. typeof(result))
            
            if typeof(result) == "table" then
                print(indent .. "  Table entries: " .. #result)
                
                -- Print first entry as sample
                for k, v in pairs(result) do
                    print(indent .. "  Sample key: " .. tostring(k))
                    print(indent .. "  Sample value type: " .. typeof(v))
                    break
                end
            end
        else
            print(indent .. "  Failed to require module")
        end
    end
    
    for _, child in pairs(instance:GetChildren()) do
        exploreInstance(child, depth + 1)
    end
end

print("Exploring crystalChances structure:")
exploreInstance(crystalChances)
print("Exploration complete")
