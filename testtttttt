local crystalChances = game:GetService("ReplicatedStorage").crystalChances

-- Names to exclude
local excludeNames = {
    ["A. Gnatomy"] = true,
    ["Alien Girl"] = true,
    ["Golden Warrior"] = true,
    ["Green-Fly"] = true,
    ["Hank"] = true,
    ["Ice Ice"] = true,
    ["Mask Of Gold"] = true,
    ["Masked Marksman"] = true,
    ["Mr. Serious"] = true,
    ["Sir Flame"] = true,
    ["Sky Hawk"] = true,
    ["Screaming Bones"] = true,
    ["Slitherman"] = true,
    ["Smiley"] = true,
    ["Chops"] = true,
    ["Boy Wonder"] = true,
    ["Cool Guy Larry"] = true
}

local function extractEggData()
    local result = "return {\n"
    
    -- Iterate through each egg folder in crystalChances
    for _, eggFolder in pairs(crystalChances:GetChildren()) do
        local eggName = eggFolder.Name
        print("Processing egg: " .. eggName)
        
        -- Add egg entry to the Lua table
        result = result .. "  [\"" .. eggName .. "\"] = {\n"
        
        -- Create tables to store pets by rarity
        local petsByRarity = {}
        
        -- Iterate through each pet entry in the egg folder
        for _, petEntry in pairs(eggFolder:GetChildren()) do
            -- Try to find the required values
            local nameValue = petEntry:FindFirstChild("nameValue")
            local rarityValue = petEntry:FindFirstChild("rarityValue")
            
            if nameValue and rarityValue and nameValue:IsA("StringValue") and rarityValue:IsA("StringValue") then
                local petName = nameValue.Value
                local rarity = rarityValue.Value
                
                -- Skip excluded names
                if not excludeNames[petName] then
                    -- Initialize rarity table if it doesn't exist
                    if not petsByRarity[rarity] then
                        petsByRarity[rarity] = {}
                    end
                    
                    -- Add pet to appropriate rarity table
                    table.insert(petsByRarity[rarity], petName)
                end
            end
        end
        
        -- Add pets grouped by rarity
        for rarity, pets in pairs(petsByRarity) do
            if #pets > 0 then
                result = result .. "    [\"" .. rarity .. "\"] = {\n"
                
                for _, petName in ipairs(pets) do
                    result = result .. "      \"" .. petName .. "\",\n"
                end
                
                result = result .. "    },\n"
            end
        end
        
        result = result .. "  },\n"
    end
    
    result = result .. "}"
    return result
end

local eggDataString = extractEggData()
print("\nExtracted Egg Data in Lua format:")
print(eggDataString)

-- Try to copy to clipboard
local success, err = pcall(function()
    setclipboard(eggDataString)
end)

if success then
    print("Egg data copied to clipboard!")
else
    print("Failed to copy to clipboard: " .. tostring(err))
    
    -- Try writing to a file if clipboard fails
    pcall(function()
        writefile("EggData.lua", eggDataString)
        print("Data written to EggData.lua")
    end)
end
